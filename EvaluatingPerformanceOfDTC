{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOE8jxQZffe1WcF+U4/SP/H"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6wZsN7O4csWe","executionInfo":{"status":"ok","timestamp":1665729975678,"user_tz":-330,"elapsed":30676,"user":{"displayName":"Vishvendra Singh","userId":"02038272173462772719"}},"outputId":"a3c9e5b2-b8d3-43fa-db60-5ccad8843f5e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}],"source":["from google.colab import drive\n","drive.mount(\"/content/drive/\")\n","import os"]},{"cell_type":"code","source":["# Import required libraries\n","import pandas as pd\n","import numpy as np \n","import matplotlib.pyplot as plt\n","import sklearn\n","\n","# Import necessary modules\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_squared_error\n","from math import sqrt\n","from sklearn import model_selection\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.model_selection import KFold\n","from sklearn.model_selection import LeaveOneOut\n","from sklearn.model_selection import LeavePOut\n","from sklearn.model_selection import ShuffleSplit\n","from sklearn.model_selection import StratifiedKFold"],"metadata":{"id":"QN8g7Zidc8bY","executionInfo":{"status":"ok","timestamp":1665729983682,"user_tz":-330,"elapsed":1824,"user":{"displayName":"Vishvendra Singh","userId":"02038272173462772719"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["dat = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/pima.csv') \n","print(dat.shape)\n","dat.describe().transpose()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":349},"id":"mBGjXuJ1ddZE","executionInfo":{"status":"ok","timestamp":1665729988034,"user_tz":-330,"elapsed":730,"user":{"displayName":"Vishvendra Singh","userId":"02038272173462772719"}},"outputId":"44e6a956-4f59-4010-902a-4bff672b757e"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["(768, 9)\n"]},{"output_type":"execute_result","data":{"text/plain":["                          count        mean         std     min       25%  \\\n","Pregnancies               768.0    3.845052    3.369578   0.000   1.00000   \n","Glucose                   768.0  120.894531   31.972618   0.000  99.00000   \n","BloodPressure             768.0   69.105469   19.355807   0.000  62.00000   \n","SkinThickness             768.0   20.536458   15.952218   0.000   0.00000   \n","Insulin                   768.0   79.799479  115.244002   0.000   0.00000   \n","BMI                       768.0   31.992578    7.884160   0.000  27.30000   \n","DiabetesPedigreeFunction  768.0    0.471876    0.331329   0.078   0.24375   \n","Age                       768.0   33.240885   11.760232  21.000  24.00000   \n","Outcome                   768.0    0.348958    0.476951   0.000   0.00000   \n","\n","                               50%        75%     max  \n","Pregnancies                 3.0000    6.00000   17.00  \n","Glucose                   117.0000  140.25000  199.00  \n","BloodPressure              72.0000   80.00000  122.00  \n","SkinThickness              23.0000   32.00000   99.00  \n","Insulin                    30.5000  127.25000  846.00  \n","BMI                        32.0000   36.60000   67.10  \n","DiabetesPedigreeFunction    0.3725    0.62625    2.42  \n","Age                        29.0000   41.00000   81.00  \n","Outcome                     0.0000    1.00000    1.00  "],"text/html":["\n","  <div id=\"df-6ad5bf8c-9d9b-4b06-aa94-92e06afe4925\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Pregnancies</th>\n","      <td>768.0</td>\n","      <td>3.845052</td>\n","      <td>3.369578</td>\n","      <td>0.000</td>\n","      <td>1.00000</td>\n","      <td>3.0000</td>\n","      <td>6.00000</td>\n","      <td>17.00</td>\n","    </tr>\n","    <tr>\n","      <th>Glucose</th>\n","      <td>768.0</td>\n","      <td>120.894531</td>\n","      <td>31.972618</td>\n","      <td>0.000</td>\n","      <td>99.00000</td>\n","      <td>117.0000</td>\n","      <td>140.25000</td>\n","      <td>199.00</td>\n","    </tr>\n","    <tr>\n","      <th>BloodPressure</th>\n","      <td>768.0</td>\n","      <td>69.105469</td>\n","      <td>19.355807</td>\n","      <td>0.000</td>\n","      <td>62.00000</td>\n","      <td>72.0000</td>\n","      <td>80.00000</td>\n","      <td>122.00</td>\n","    </tr>\n","    <tr>\n","      <th>SkinThickness</th>\n","      <td>768.0</td>\n","      <td>20.536458</td>\n","      <td>15.952218</td>\n","      <td>0.000</td>\n","      <td>0.00000</td>\n","      <td>23.0000</td>\n","      <td>32.00000</td>\n","      <td>99.00</td>\n","    </tr>\n","    <tr>\n","      <th>Insulin</th>\n","      <td>768.0</td>\n","      <td>79.799479</td>\n","      <td>115.244002</td>\n","      <td>0.000</td>\n","      <td>0.00000</td>\n","      <td>30.5000</td>\n","      <td>127.25000</td>\n","      <td>846.00</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>768.0</td>\n","      <td>31.992578</td>\n","      <td>7.884160</td>\n","      <td>0.000</td>\n","      <td>27.30000</td>\n","      <td>32.0000</td>\n","      <td>36.60000</td>\n","      <td>67.10</td>\n","    </tr>\n","    <tr>\n","      <th>DiabetesPedigreeFunction</th>\n","      <td>768.0</td>\n","      <td>0.471876</td>\n","      <td>0.331329</td>\n","      <td>0.078</td>\n","      <td>0.24375</td>\n","      <td>0.3725</td>\n","      <td>0.62625</td>\n","      <td>2.42</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>768.0</td>\n","      <td>33.240885</td>\n","      <td>11.760232</td>\n","      <td>21.000</td>\n","      <td>24.00000</td>\n","      <td>29.0000</td>\n","      <td>41.00000</td>\n","      <td>81.00</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>768.0</td>\n","      <td>0.348958</td>\n","      <td>0.476951</td>\n","      <td>0.000</td>\n","      <td>0.00000</td>\n","      <td>0.0000</td>\n","      <td>1.00000</td>\n","      <td>1.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ad5bf8c-9d9b-4b06-aa94-92e06afe4925')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6ad5bf8c-9d9b-4b06-aa94-92e06afe4925 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6ad5bf8c-9d9b-4b06-aa94-92e06afe4925');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["x1 = dat.drop('Outcome', axis=1).values \n","y1 = dat['Outcome'].values\n","\n","x1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nZon6Km7eMVx","executionInfo":{"status":"ok","timestamp":1665729995336,"user_tz":-330,"elapsed":410,"user":{"displayName":"Vishvendra Singh","userId":"02038272173462772719"}},"outputId":"c0967b3b-9d00-419b-d3f6-4d028fd202c9"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[  6.   , 148.   ,  72.   , ...,  33.6  ,   0.627,  50.   ],\n","       [  1.   ,  85.   ,  66.   , ...,  26.6  ,   0.351,  31.   ],\n","       [  8.   , 183.   ,  64.   , ...,  23.3  ,   0.672,  32.   ],\n","       ...,\n","       [  5.   , 121.   ,  72.   , ...,  26.2  ,   0.245,  30.   ],\n","       [  1.   , 126.   ,  60.   , ...,  30.1  ,   0.349,  47.   ],\n","       [  1.   ,  93.   ,  70.   , ...,  30.4  ,   0.315,  23.   ]])"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["y1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_oJBUwrnexXq","executionInfo":{"status":"ok","timestamp":1641306338445,"user_tz":-330,"elapsed":555,"user":{"displayName":"Vishvendra Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjtUD8auHCH4pJYltUrB2uKjJaJOpv_QCWsg3ejrg=s64","userId":"02038272173462772719"}},"outputId":"835b5f81-b45d-4fc7-c21d-10f436223de9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n","       1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n","       0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n","       1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1,\n","       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n","       1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1,\n","       0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n","       1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n","       1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n","       1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n","       1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n","       0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n","       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n","       0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0,\n","       0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1,\n","       0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,\n","       1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\n","       0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0,\n","       0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,\n","       1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n","       0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n","       0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n","       0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0,\n","       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0])"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["**1.Holdout Validation Approach**"],"metadata":{"id":"EH8HXQJAgFsP"}},{"cell_type":"code","source":["# Evaluate using a train and a test set\n","X_train, X_test, Y_train, Y_test = model_selection.train_test_split(x1, y1, test_size=0.30, random_state=100)\n","model = DecisionTreeClassifier()\n","model.fit(X_train, Y_train)\n","result = model.score(X_test, Y_test)\n","print(\"Accuracy: %.2f%%\" % (result*100.0))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X9VsnGSMe3BK","executionInfo":{"status":"ok","timestamp":1665730001131,"user_tz":-330,"elapsed":11,"user":{"displayName":"Vishvendra Singh","userId":"02038272173462772719"}},"outputId":"301a50c0-1242-4b26-d0d9-f1b4b98a747b"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 66.23%\n"]}]},{"cell_type":"markdown","source":["**2.K-fold Cross-Validation**"],"metadata":{"id":"M6QS2vkXgR2W"}},{"cell_type":"code","source":["kfold = model_selection.KFold(n_splits=10)\n","model_kfold = DecisionTreeClassifier()\n","results_kfold = model_selection.cross_val_score(model_kfold, x1, y1, cv=kfold)\n","print(\"Accuracy: %.2f%%\" % (results_kfold.mean()*100.0)) "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Sgw7sNggh25","executionInfo":{"status":"ok","timestamp":1665730004921,"user_tz":-330,"elapsed":11,"user":{"displayName":"Vishvendra Singh","userId":"02038272173462772719"}},"outputId":"fdefbb19-a1a8-442d-a1c6-a0a3156466c5"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 69.79%\n"]}]},{"cell_type":"markdown","source":["**3.Stratified K-fold Cross-Validation**"],"metadata":{"id":"9rye6e1_hOGY"}},{"cell_type":"code","source":["skfold = StratifiedKFold(n_splits=3)\n","model_skfold = DecisionTreeClassifier()\n","results_skfold = model_selection.cross_val_score(model_skfold, x1, y1, cv=skfold)\n","print(\"Accuracy: %.2f%%\" % (results_skfold.mean()*100.0))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A2-jZAAjhXHj","executionInfo":{"status":"ok","timestamp":1665730010048,"user_tz":-330,"elapsed":687,"user":{"displayName":"Vishvendra Singh","userId":"02038272173462772719"}},"outputId":"5b44a7af-c2cb-4eb2-f719-78a76deb5695"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 68.49%\n"]}]},{"cell_type":"markdown","source":["**4.Leave One Out Cross-Validation**"],"metadata":{"id":"noIZYYpAhxg1"}},{"cell_type":"code","source":["loocv = model_selection.LeaveOneOut()\n","model_loocv = DecisionTreeClassifier()\n","results_loocv = model_selection.cross_val_score(model_loocv, x1, y1, cv=loocv)\n","print(\"Accuracy: %.2f%%\" % (results_loocv.mean()*100.0))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zSSUisUvh4dV","executionInfo":{"status":"ok","timestamp":1665730017941,"user_tz":-330,"elapsed":4088,"user":{"displayName":"Vishvendra Singh","userId":"02038272173462772719"}},"outputId":"ebd4a8a6-0d89-4aa2-9ffa-cc847c73abbc"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 70.44%\n"]}]},{"cell_type":"markdown","source":["**5.Repeated Random Test-Train Splits**"],"metadata":{"id":"m7dmSXKniKed"}},{"cell_type":"code","source":["kfold2 = model_selection.ShuffleSplit(n_splits=10, test_size=0.30, random_state=100)\n","model_shufflecv = DecisionTreeClassifier()\n","results_4 = model_selection.cross_val_score(model_shufflecv, x1, y1, cv=kfold2)\n","print(\"Accuracy: %.2f%% (%.2f%%)\" % (results_4.mean()*100.0, results_4.std()*100.0))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t3M2K_e7iVZ2","executionInfo":{"status":"ok","timestamp":1665730022994,"user_tz":-330,"elapsed":727,"user":{"displayName":"Vishvendra Singh","userId":"02038272173462772719"}},"outputId":"ab6eb089-2d4e-4a84-bd35-77bbc4f78c3d"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 69.35% (2.16%)\n"]}]},{"cell_type":"markdown","source":["**RESULTS:**"],"metadata":{"id":"AoYpWYLElOl_"}},{"cell_type":"markdown","source":["Accuracy by Holdout Validation Approach is 66.23%"],"metadata":{"id":"dHzUOxs8nV-f"}},{"cell_type":"markdown","source":["Accuracy by K-fold Cross-Validation is 70.30%"],"metadata":{"id":"7TiB1t2_nYUR"}},{"cell_type":"markdown","source":["Accuracy by Stratified K-fold Cross-Validation is 68.88%"],"metadata":{"id":"bObOkiSYnjBW"}},{"cell_type":"markdown","source":["Accuracy by Leave One Out Cross-Validation is 70.70%"],"metadata":{"id":"HZEAq9g3nsMA"}},{"cell_type":"markdown","source":["Accuracy by Repeated Random Test-Train Splits is 68.92%"],"metadata":{"id":"o2F2YIB_nyZX"}}]}